# This file was automatically generated by SWIG (http://www.swig.org).
# Version 2.0.4
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.



from sys import version_info
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_foo_swig', [dirname(__file__)])
        except ImportError:
            import _foo_swig
            return _foo_swig
        if fp is not None:
            try:
                _mod = imp.load_module('_foo_swig', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _foo_swig = swig_import_helper()
    del swig_import_helper
else:
    import _foo_swig
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


class burst_tagger(object):
    """Proxy of C++ gr::foo::burst_tagger class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def make(*args, **kwargs):
        """
        make(pmt_t tag_name, unsigned int mult) -> sptr

        Params: (tag_name, mult)
        """
        return _foo_swig.burst_tagger_make(*args, **kwargs)

    make = staticmethod(make)
    __swig_destroy__ = _foo_swig.delete_burst_tagger
    __del__ = lambda self : None;
burst_tagger_swigregister = _foo_swig.burst_tagger_swigregister
burst_tagger_swigregister(burst_tagger)

def burst_tagger_make(*args, **kwargs):
  """
    burst_tagger_make(pmt_t tag_name, unsigned int mult) -> sptr

    Params: (tag_name, mult)
    """
  return _foo_swig.burst_tagger_make(*args, **kwargs)

class packet_dropper(object):
    """Proxy of C++ gr::foo::packet_dropper class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def make(*args, **kwargs):
        """
        make(double drop_rate, unsigned long seed) -> sptr

        Params: (drop_rate, seed)
        """
        return _foo_swig.packet_dropper_make(*args, **kwargs)

    make = staticmethod(make)
    __swig_destroy__ = _foo_swig.delete_packet_dropper
    __del__ = lambda self : None;
packet_dropper_swigregister = _foo_swig.packet_dropper_swigregister
packet_dropper_swigregister(packet_dropper)

def packet_dropper_make(*args, **kwargs):
  """
    packet_dropper_make(double drop_rate, unsigned long seed) -> sptr

    Params: (drop_rate, seed)
    """
  return _foo_swig.packet_dropper_make(*args, **kwargs)

class packet_pad(object):
    """Proxy of C++ gr::foo::packet_pad class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def make(debug = False, pad_front = 0, pad_tail = 0):
        """
        make(bool debug = False, unsigned int pad_front = 0, unsigned int pad_tail = 0) -> sptr

        Params: (debug, pad_front, pad_tail)
        """
        return _foo_swig.packet_pad_make(debug, pad_front, pad_tail)

    make = staticmethod(make)
    __swig_destroy__ = _foo_swig.delete_packet_pad
    __del__ = lambda self : None;
packet_pad_swigregister = _foo_swig.packet_pad_swigregister
packet_pad_swigregister(packet_pad)

def packet_pad_make(debug = False, pad_front = 0, pad_tail = 0):
  """
    packet_pad_make(bool debug = False, unsigned int pad_front = 0, unsigned int pad_tail = 0) -> sptr

    Params: (debug, pad_front, pad_tail)
    """
  return _foo_swig.packet_pad_make(debug, pad_front, pad_tail)

class periodic_msg_source(object):
    """Proxy of C++ gr::foo::periodic_msg_source class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def make(*args, **kwargs):
        """
        make(pmt_t msg, float interval, int num_msg = -1, bool debug = False) -> sptr

        Params: (msg, interval, num_msg, debug)
        """
        return _foo_swig.periodic_msg_source_make(*args, **kwargs)

    make = staticmethod(make)
    __swig_destroy__ = _foo_swig.delete_periodic_msg_source
    __del__ = lambda self : None;
periodic_msg_source_swigregister = _foo_swig.periodic_msg_source_swigregister
periodic_msg_source_swigregister(periodic_msg_source)

def periodic_msg_source_make(*args, **kwargs):
  """
    periodic_msg_source_make(pmt_t msg, float interval, int num_msg = -1, bool debug = False) -> sptr

    Params: (msg, interval, num_msg, debug)
    """
  return _foo_swig.periodic_msg_source_make(*args, **kwargs)

WIFI = _foo_swig.WIFI
ZIGBEE = _foo_swig.ZIGBEE
class wireshark_connector(object):
    """Proxy of C++ gr::foo::wireshark_connector class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def make(*args, **kwargs):
        """
        make(LinkType type, bool debug = False) -> sptr

        Params: (type, debug)
        """
        return _foo_swig.wireshark_connector_make(*args, **kwargs)

    make = staticmethod(make)
    __swig_destroy__ = _foo_swig.delete_wireshark_connector
    __del__ = lambda self : None;
wireshark_connector_swigregister = _foo_swig.wireshark_connector_swigregister
wireshark_connector_swigregister(wireshark_connector)

def wireshark_connector_make(*args, **kwargs):
  """
    wireshark_connector_make(LinkType type, bool debug = False) -> sptr

    Params: (type, debug)
    """
  return _foo_swig.wireshark_connector_make(*args, **kwargs)

class burst_tagger_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::foo::burst_tagger)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(self) -> burst_tagger_sptr
        __init__(self, burst_tagger p) -> burst_tagger_sptr
        """
        this = _foo_swig.new_burst_tagger_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(self) -> burst_tagger"""
        return _foo_swig.burst_tagger_sptr___deref__(self)

    __swig_destroy__ = _foo_swig.delete_burst_tagger_sptr
    __del__ = lambda self : None;
    def make(self, *args, **kwargs):
        """
        make(self, pmt_t tag_name, unsigned int mult) -> sptr

        Params: (tag_name, mult)
        """
        return _foo_swig.burst_tagger_sptr_make(self, *args, **kwargs)

    def history(self):
        """history(self) -> unsigned int"""
        return _foo_swig.burst_tagger_sptr_history(self)

    def output_multiple(self):
        """output_multiple(self) -> int"""
        return _foo_swig.burst_tagger_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(self) -> double"""
        return _foo_swig.burst_tagger_sptr_relative_rate(self)

    def start(self):
        """start(self) -> bool"""
        return _foo_swig.burst_tagger_sptr_start(self)

    def stop(self):
        """stop(self) -> bool"""
        return _foo_swig.burst_tagger_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(self, unsigned int which_input) -> uint64_t"""
        return _foo_swig.burst_tagger_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(self, unsigned int which_output) -> uint64_t"""
        return _foo_swig.burst_tagger_sptr_nitems_written(self, *args, **kwargs)

    def max_noutput_items(self):
        """max_noutput_items(self) -> int"""
        return _foo_swig.burst_tagger_sptr_max_noutput_items(self)

    def set_max_noutput_items(self, *args, **kwargs):
        """set_max_noutput_items(self, int m)"""
        return _foo_swig.burst_tagger_sptr_set_max_noutput_items(self, *args, **kwargs)

    def unset_max_noutput_items(self):
        """unset_max_noutput_items(self)"""
        return _foo_swig.burst_tagger_sptr_unset_max_noutput_items(self)

    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(self) -> bool"""
        return _foo_swig.burst_tagger_sptr_is_set_max_noutput_items(self)

    def max_output_buffer(self, *args, **kwargs):
        """max_output_buffer(self, int i) -> long"""
        return _foo_swig.burst_tagger_sptr_max_output_buffer(self, *args, **kwargs)

    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(self, long max_output_buffer)
        set_max_output_buffer(self, int port, long max_output_buffer)
        """
        return _foo_swig.burst_tagger_sptr_set_max_output_buffer(self, *args)

    def min_output_buffer(self, *args, **kwargs):
        """min_output_buffer(self, int i) -> long"""
        return _foo_swig.burst_tagger_sptr_min_output_buffer(self, *args, **kwargs)

    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(self, long min_output_buffer)
        set_min_output_buffer(self, int port, long min_output_buffer)
        """
        return _foo_swig.burst_tagger_sptr_set_min_output_buffer(self, *args)

    def pc_noutput_items(self):
        """pc_noutput_items(self) -> float"""
        return _foo_swig.burst_tagger_sptr_pc_noutput_items(self)

    def pc_noutput_items_var(self):
        """pc_noutput_items_var(self) -> float"""
        return _foo_swig.burst_tagger_sptr_pc_noutput_items_var(self)

    def pc_nproduced(self):
        """pc_nproduced(self) -> float"""
        return _foo_swig.burst_tagger_sptr_pc_nproduced(self)

    def pc_nproduced_var(self):
        """pc_nproduced_var(self) -> float"""
        return _foo_swig.burst_tagger_sptr_pc_nproduced_var(self)

    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(self, int which) -> float
        pc_input_buffers_full(self) -> pmt_vector_float
        """
        return _foo_swig.burst_tagger_sptr_pc_input_buffers_full(self, *args)

    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(self, int which) -> float
        pc_input_buffers_full_var(self) -> pmt_vector_float
        """
        return _foo_swig.burst_tagger_sptr_pc_input_buffers_full_var(self, *args)

    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(self, int which) -> float
        pc_output_buffers_full(self) -> pmt_vector_float
        """
        return _foo_swig.burst_tagger_sptr_pc_output_buffers_full(self, *args)

    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(self, int which) -> float
        pc_output_buffers_full_var(self) -> pmt_vector_float
        """
        return _foo_swig.burst_tagger_sptr_pc_output_buffers_full_var(self, *args)

    def pc_work_time(self):
        """pc_work_time(self) -> float"""
        return _foo_swig.burst_tagger_sptr_pc_work_time(self)

    def pc_work_time_var(self):
        """pc_work_time_var(self) -> float"""
        return _foo_swig.burst_tagger_sptr_pc_work_time_var(self)

    def set_processor_affinity(self, *args, **kwargs):
        """set_processor_affinity(self, __dummy_5__ mask)"""
        return _foo_swig.burst_tagger_sptr_set_processor_affinity(self, *args, **kwargs)

    def unset_processor_affinity(self):
        """unset_processor_affinity(self)"""
        return _foo_swig.burst_tagger_sptr_unset_processor_affinity(self)

    def processor_affinity(self):
        """processor_affinity(self) -> __dummy_5__"""
        return _foo_swig.burst_tagger_sptr_processor_affinity(self)

    def name(self):
        """name(self) -> string"""
        return _foo_swig.burst_tagger_sptr_name(self)

    def symbol_name(self):
        """symbol_name(self) -> string"""
        return _foo_swig.burst_tagger_sptr_symbol_name(self)

    def input_signature(self):
        """input_signature(self) -> sptr"""
        return _foo_swig.burst_tagger_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(self) -> sptr"""
        return _foo_swig.burst_tagger_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(self) -> long"""
        return _foo_swig.burst_tagger_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(self) -> basic_block_sptr"""
        return _foo_swig.burst_tagger_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(self, int ninputs, int noutputs) -> bool"""
        return _foo_swig.burst_tagger_sptr_check_topology(self, *args, **kwargs)

    def alias(self):
        """alias(self) -> string"""
        return _foo_swig.burst_tagger_sptr_alias(self)

    def set_block_alias(self, *args, **kwargs):
        """set_block_alias(self, string name)"""
        return _foo_swig.burst_tagger_sptr_set_block_alias(self, *args, **kwargs)

    def _post(self, *args, **kwargs):
        """_post(self, pmt_t which_port, pmt_t msg)"""
        return _foo_swig.burst_tagger_sptr__post(self, *args, **kwargs)

    def message_ports_in(self):
        """message_ports_in(self) -> pmt_t"""
        return _foo_swig.burst_tagger_sptr_message_ports_in(self)

    def message_ports_out(self):
        """message_ports_out(self) -> pmt_t"""
        return _foo_swig.burst_tagger_sptr_message_ports_out(self)

burst_tagger_sptr_swigregister = _foo_swig.burst_tagger_sptr_swigregister
burst_tagger_sptr_swigregister(burst_tagger_sptr)

burst_tagger_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
burst_tagger = burst_tagger.make;

class packet_dropper_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::foo::packet_dropper)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(self) -> packet_dropper_sptr
        __init__(self, packet_dropper p) -> packet_dropper_sptr
        """
        this = _foo_swig.new_packet_dropper_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(self) -> packet_dropper"""
        return _foo_swig.packet_dropper_sptr___deref__(self)

    __swig_destroy__ = _foo_swig.delete_packet_dropper_sptr
    __del__ = lambda self : None;
    def make(self, *args, **kwargs):
        """
        make(self, double drop_rate, unsigned long seed) -> sptr

        Params: (drop_rate, seed)
        """
        return _foo_swig.packet_dropper_sptr_make(self, *args, **kwargs)

    def history(self):
        """history(self) -> unsigned int"""
        return _foo_swig.packet_dropper_sptr_history(self)

    def output_multiple(self):
        """output_multiple(self) -> int"""
        return _foo_swig.packet_dropper_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(self) -> double"""
        return _foo_swig.packet_dropper_sptr_relative_rate(self)

    def start(self):
        """start(self) -> bool"""
        return _foo_swig.packet_dropper_sptr_start(self)

    def stop(self):
        """stop(self) -> bool"""
        return _foo_swig.packet_dropper_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(self, unsigned int which_input) -> uint64_t"""
        return _foo_swig.packet_dropper_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(self, unsigned int which_output) -> uint64_t"""
        return _foo_swig.packet_dropper_sptr_nitems_written(self, *args, **kwargs)

    def max_noutput_items(self):
        """max_noutput_items(self) -> int"""
        return _foo_swig.packet_dropper_sptr_max_noutput_items(self)

    def set_max_noutput_items(self, *args, **kwargs):
        """set_max_noutput_items(self, int m)"""
        return _foo_swig.packet_dropper_sptr_set_max_noutput_items(self, *args, **kwargs)

    def unset_max_noutput_items(self):
        """unset_max_noutput_items(self)"""
        return _foo_swig.packet_dropper_sptr_unset_max_noutput_items(self)

    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(self) -> bool"""
        return _foo_swig.packet_dropper_sptr_is_set_max_noutput_items(self)

    def max_output_buffer(self, *args, **kwargs):
        """max_output_buffer(self, int i) -> long"""
        return _foo_swig.packet_dropper_sptr_max_output_buffer(self, *args, **kwargs)

    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(self, long max_output_buffer)
        set_max_output_buffer(self, int port, long max_output_buffer)
        """
        return _foo_swig.packet_dropper_sptr_set_max_output_buffer(self, *args)

    def min_output_buffer(self, *args, **kwargs):
        """min_output_buffer(self, int i) -> long"""
        return _foo_swig.packet_dropper_sptr_min_output_buffer(self, *args, **kwargs)

    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(self, long min_output_buffer)
        set_min_output_buffer(self, int port, long min_output_buffer)
        """
        return _foo_swig.packet_dropper_sptr_set_min_output_buffer(self, *args)

    def pc_noutput_items(self):
        """pc_noutput_items(self) -> float"""
        return _foo_swig.packet_dropper_sptr_pc_noutput_items(self)

    def pc_noutput_items_var(self):
        """pc_noutput_items_var(self) -> float"""
        return _foo_swig.packet_dropper_sptr_pc_noutput_items_var(self)

    def pc_nproduced(self):
        """pc_nproduced(self) -> float"""
        return _foo_swig.packet_dropper_sptr_pc_nproduced(self)

    def pc_nproduced_var(self):
        """pc_nproduced_var(self) -> float"""
        return _foo_swig.packet_dropper_sptr_pc_nproduced_var(self)

    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(self, int which) -> float
        pc_input_buffers_full(self) -> pmt_vector_float
        """
        return _foo_swig.packet_dropper_sptr_pc_input_buffers_full(self, *args)

    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(self, int which) -> float
        pc_input_buffers_full_var(self) -> pmt_vector_float
        """
        return _foo_swig.packet_dropper_sptr_pc_input_buffers_full_var(self, *args)

    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(self, int which) -> float
        pc_output_buffers_full(self) -> pmt_vector_float
        """
        return _foo_swig.packet_dropper_sptr_pc_output_buffers_full(self, *args)

    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(self, int which) -> float
        pc_output_buffers_full_var(self) -> pmt_vector_float
        """
        return _foo_swig.packet_dropper_sptr_pc_output_buffers_full_var(self, *args)

    def pc_work_time(self):
        """pc_work_time(self) -> float"""
        return _foo_swig.packet_dropper_sptr_pc_work_time(self)

    def pc_work_time_var(self):
        """pc_work_time_var(self) -> float"""
        return _foo_swig.packet_dropper_sptr_pc_work_time_var(self)

    def set_processor_affinity(self, *args, **kwargs):
        """set_processor_affinity(self, __dummy_5__ mask)"""
        return _foo_swig.packet_dropper_sptr_set_processor_affinity(self, *args, **kwargs)

    def unset_processor_affinity(self):
        """unset_processor_affinity(self)"""
        return _foo_swig.packet_dropper_sptr_unset_processor_affinity(self)

    def processor_affinity(self):
        """processor_affinity(self) -> __dummy_5__"""
        return _foo_swig.packet_dropper_sptr_processor_affinity(self)

    def name(self):
        """name(self) -> string"""
        return _foo_swig.packet_dropper_sptr_name(self)

    def symbol_name(self):
        """symbol_name(self) -> string"""
        return _foo_swig.packet_dropper_sptr_symbol_name(self)

    def input_signature(self):
        """input_signature(self) -> sptr"""
        return _foo_swig.packet_dropper_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(self) -> sptr"""
        return _foo_swig.packet_dropper_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(self) -> long"""
        return _foo_swig.packet_dropper_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(self) -> basic_block_sptr"""
        return _foo_swig.packet_dropper_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(self, int ninputs, int noutputs) -> bool"""
        return _foo_swig.packet_dropper_sptr_check_topology(self, *args, **kwargs)

    def alias(self):
        """alias(self) -> string"""
        return _foo_swig.packet_dropper_sptr_alias(self)

    def set_block_alias(self, *args, **kwargs):
        """set_block_alias(self, string name)"""
        return _foo_swig.packet_dropper_sptr_set_block_alias(self, *args, **kwargs)

    def _post(self, *args, **kwargs):
        """_post(self, pmt_t which_port, pmt_t msg)"""
        return _foo_swig.packet_dropper_sptr__post(self, *args, **kwargs)

    def message_ports_in(self):
        """message_ports_in(self) -> pmt_t"""
        return _foo_swig.packet_dropper_sptr_message_ports_in(self)

    def message_ports_out(self):
        """message_ports_out(self) -> pmt_t"""
        return _foo_swig.packet_dropper_sptr_message_ports_out(self)

packet_dropper_sptr_swigregister = _foo_swig.packet_dropper_sptr_swigregister
packet_dropper_sptr_swigregister(packet_dropper_sptr)

packet_dropper_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
packet_dropper = packet_dropper.make;

class packet_pad_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::foo::packet_pad)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(self) -> packet_pad_sptr
        __init__(self, packet_pad p) -> packet_pad_sptr
        """
        this = _foo_swig.new_packet_pad_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(self) -> packet_pad"""
        return _foo_swig.packet_pad_sptr___deref__(self)

    __swig_destroy__ = _foo_swig.delete_packet_pad_sptr
    __del__ = lambda self : None;
    def make(self, debug = False, pad_front = 0, pad_tail = 0):
        """
        make(self, bool debug = False, unsigned int pad_front = 0, unsigned int pad_tail = 0) -> sptr

        Params: (debug, pad_front, pad_tail)
        """
        return _foo_swig.packet_pad_sptr_make(self, debug, pad_front, pad_tail)

    def history(self):
        """history(self) -> unsigned int"""
        return _foo_swig.packet_pad_sptr_history(self)

    def output_multiple(self):
        """output_multiple(self) -> int"""
        return _foo_swig.packet_pad_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(self) -> double"""
        return _foo_swig.packet_pad_sptr_relative_rate(self)

    def start(self):
        """start(self) -> bool"""
        return _foo_swig.packet_pad_sptr_start(self)

    def stop(self):
        """stop(self) -> bool"""
        return _foo_swig.packet_pad_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(self, unsigned int which_input) -> uint64_t"""
        return _foo_swig.packet_pad_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(self, unsigned int which_output) -> uint64_t"""
        return _foo_swig.packet_pad_sptr_nitems_written(self, *args, **kwargs)

    def max_noutput_items(self):
        """max_noutput_items(self) -> int"""
        return _foo_swig.packet_pad_sptr_max_noutput_items(self)

    def set_max_noutput_items(self, *args, **kwargs):
        """set_max_noutput_items(self, int m)"""
        return _foo_swig.packet_pad_sptr_set_max_noutput_items(self, *args, **kwargs)

    def unset_max_noutput_items(self):
        """unset_max_noutput_items(self)"""
        return _foo_swig.packet_pad_sptr_unset_max_noutput_items(self)

    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(self) -> bool"""
        return _foo_swig.packet_pad_sptr_is_set_max_noutput_items(self)

    def max_output_buffer(self, *args, **kwargs):
        """max_output_buffer(self, int i) -> long"""
        return _foo_swig.packet_pad_sptr_max_output_buffer(self, *args, **kwargs)

    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(self, long max_output_buffer)
        set_max_output_buffer(self, int port, long max_output_buffer)
        """
        return _foo_swig.packet_pad_sptr_set_max_output_buffer(self, *args)

    def min_output_buffer(self, *args, **kwargs):
        """min_output_buffer(self, int i) -> long"""
        return _foo_swig.packet_pad_sptr_min_output_buffer(self, *args, **kwargs)

    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(self, long min_output_buffer)
        set_min_output_buffer(self, int port, long min_output_buffer)
        """
        return _foo_swig.packet_pad_sptr_set_min_output_buffer(self, *args)

    def pc_noutput_items(self):
        """pc_noutput_items(self) -> float"""
        return _foo_swig.packet_pad_sptr_pc_noutput_items(self)

    def pc_noutput_items_var(self):
        """pc_noutput_items_var(self) -> float"""
        return _foo_swig.packet_pad_sptr_pc_noutput_items_var(self)

    def pc_nproduced(self):
        """pc_nproduced(self) -> float"""
        return _foo_swig.packet_pad_sptr_pc_nproduced(self)

    def pc_nproduced_var(self):
        """pc_nproduced_var(self) -> float"""
        return _foo_swig.packet_pad_sptr_pc_nproduced_var(self)

    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(self, int which) -> float
        pc_input_buffers_full(self) -> pmt_vector_float
        """
        return _foo_swig.packet_pad_sptr_pc_input_buffers_full(self, *args)

    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(self, int which) -> float
        pc_input_buffers_full_var(self) -> pmt_vector_float
        """
        return _foo_swig.packet_pad_sptr_pc_input_buffers_full_var(self, *args)

    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(self, int which) -> float
        pc_output_buffers_full(self) -> pmt_vector_float
        """
        return _foo_swig.packet_pad_sptr_pc_output_buffers_full(self, *args)

    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(self, int which) -> float
        pc_output_buffers_full_var(self) -> pmt_vector_float
        """
        return _foo_swig.packet_pad_sptr_pc_output_buffers_full_var(self, *args)

    def pc_work_time(self):
        """pc_work_time(self) -> float"""
        return _foo_swig.packet_pad_sptr_pc_work_time(self)

    def pc_work_time_var(self):
        """pc_work_time_var(self) -> float"""
        return _foo_swig.packet_pad_sptr_pc_work_time_var(self)

    def set_processor_affinity(self, *args, **kwargs):
        """set_processor_affinity(self, __dummy_5__ mask)"""
        return _foo_swig.packet_pad_sptr_set_processor_affinity(self, *args, **kwargs)

    def unset_processor_affinity(self):
        """unset_processor_affinity(self)"""
        return _foo_swig.packet_pad_sptr_unset_processor_affinity(self)

    def processor_affinity(self):
        """processor_affinity(self) -> __dummy_5__"""
        return _foo_swig.packet_pad_sptr_processor_affinity(self)

    def name(self):
        """name(self) -> string"""
        return _foo_swig.packet_pad_sptr_name(self)

    def symbol_name(self):
        """symbol_name(self) -> string"""
        return _foo_swig.packet_pad_sptr_symbol_name(self)

    def input_signature(self):
        """input_signature(self) -> sptr"""
        return _foo_swig.packet_pad_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(self) -> sptr"""
        return _foo_swig.packet_pad_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(self) -> long"""
        return _foo_swig.packet_pad_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(self) -> basic_block_sptr"""
        return _foo_swig.packet_pad_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(self, int ninputs, int noutputs) -> bool"""
        return _foo_swig.packet_pad_sptr_check_topology(self, *args, **kwargs)

    def alias(self):
        """alias(self) -> string"""
        return _foo_swig.packet_pad_sptr_alias(self)

    def set_block_alias(self, *args, **kwargs):
        """set_block_alias(self, string name)"""
        return _foo_swig.packet_pad_sptr_set_block_alias(self, *args, **kwargs)

    def _post(self, *args, **kwargs):
        """_post(self, pmt_t which_port, pmt_t msg)"""
        return _foo_swig.packet_pad_sptr__post(self, *args, **kwargs)

    def message_ports_in(self):
        """message_ports_in(self) -> pmt_t"""
        return _foo_swig.packet_pad_sptr_message_ports_in(self)

    def message_ports_out(self):
        """message_ports_out(self) -> pmt_t"""
        return _foo_swig.packet_pad_sptr_message_ports_out(self)

packet_pad_sptr_swigregister = _foo_swig.packet_pad_sptr_swigregister
packet_pad_sptr_swigregister(packet_pad_sptr)

packet_pad_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
packet_pad = packet_pad.make;

class periodic_msg_source_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::foo::periodic_msg_source)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(self) -> periodic_msg_source_sptr
        __init__(self, periodic_msg_source p) -> periodic_msg_source_sptr
        """
        this = _foo_swig.new_periodic_msg_source_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(self) -> periodic_msg_source"""
        return _foo_swig.periodic_msg_source_sptr___deref__(self)

    __swig_destroy__ = _foo_swig.delete_periodic_msg_source_sptr
    __del__ = lambda self : None;
    def make(self, *args, **kwargs):
        """
        make(self, pmt_t msg, float interval, int num_msg = -1, bool debug = False) -> sptr

        Params: (msg, interval, num_msg, debug)
        """
        return _foo_swig.periodic_msg_source_sptr_make(self, *args, **kwargs)

    def history(self):
        """history(self) -> unsigned int"""
        return _foo_swig.periodic_msg_source_sptr_history(self)

    def output_multiple(self):
        """output_multiple(self) -> int"""
        return _foo_swig.periodic_msg_source_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(self) -> double"""
        return _foo_swig.periodic_msg_source_sptr_relative_rate(self)

    def start(self):
        """start(self) -> bool"""
        return _foo_swig.periodic_msg_source_sptr_start(self)

    def stop(self):
        """stop(self) -> bool"""
        return _foo_swig.periodic_msg_source_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(self, unsigned int which_input) -> uint64_t"""
        return _foo_swig.periodic_msg_source_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(self, unsigned int which_output) -> uint64_t"""
        return _foo_swig.periodic_msg_source_sptr_nitems_written(self, *args, **kwargs)

    def max_noutput_items(self):
        """max_noutput_items(self) -> int"""
        return _foo_swig.periodic_msg_source_sptr_max_noutput_items(self)

    def set_max_noutput_items(self, *args, **kwargs):
        """set_max_noutput_items(self, int m)"""
        return _foo_swig.periodic_msg_source_sptr_set_max_noutput_items(self, *args, **kwargs)

    def unset_max_noutput_items(self):
        """unset_max_noutput_items(self)"""
        return _foo_swig.periodic_msg_source_sptr_unset_max_noutput_items(self)

    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(self) -> bool"""
        return _foo_swig.periodic_msg_source_sptr_is_set_max_noutput_items(self)

    def max_output_buffer(self, *args, **kwargs):
        """max_output_buffer(self, int i) -> long"""
        return _foo_swig.periodic_msg_source_sptr_max_output_buffer(self, *args, **kwargs)

    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(self, long max_output_buffer)
        set_max_output_buffer(self, int port, long max_output_buffer)
        """
        return _foo_swig.periodic_msg_source_sptr_set_max_output_buffer(self, *args)

    def min_output_buffer(self, *args, **kwargs):
        """min_output_buffer(self, int i) -> long"""
        return _foo_swig.periodic_msg_source_sptr_min_output_buffer(self, *args, **kwargs)

    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(self, long min_output_buffer)
        set_min_output_buffer(self, int port, long min_output_buffer)
        """
        return _foo_swig.periodic_msg_source_sptr_set_min_output_buffer(self, *args)

    def pc_noutput_items(self):
        """pc_noutput_items(self) -> float"""
        return _foo_swig.periodic_msg_source_sptr_pc_noutput_items(self)

    def pc_noutput_items_var(self):
        """pc_noutput_items_var(self) -> float"""
        return _foo_swig.periodic_msg_source_sptr_pc_noutput_items_var(self)

    def pc_nproduced(self):
        """pc_nproduced(self) -> float"""
        return _foo_swig.periodic_msg_source_sptr_pc_nproduced(self)

    def pc_nproduced_var(self):
        """pc_nproduced_var(self) -> float"""
        return _foo_swig.periodic_msg_source_sptr_pc_nproduced_var(self)

    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(self, int which) -> float
        pc_input_buffers_full(self) -> pmt_vector_float
        """
        return _foo_swig.periodic_msg_source_sptr_pc_input_buffers_full(self, *args)

    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(self, int which) -> float
        pc_input_buffers_full_var(self) -> pmt_vector_float
        """
        return _foo_swig.periodic_msg_source_sptr_pc_input_buffers_full_var(self, *args)

    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(self, int which) -> float
        pc_output_buffers_full(self) -> pmt_vector_float
        """
        return _foo_swig.periodic_msg_source_sptr_pc_output_buffers_full(self, *args)

    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(self, int which) -> float
        pc_output_buffers_full_var(self) -> pmt_vector_float
        """
        return _foo_swig.periodic_msg_source_sptr_pc_output_buffers_full_var(self, *args)

    def pc_work_time(self):
        """pc_work_time(self) -> float"""
        return _foo_swig.periodic_msg_source_sptr_pc_work_time(self)

    def pc_work_time_var(self):
        """pc_work_time_var(self) -> float"""
        return _foo_swig.periodic_msg_source_sptr_pc_work_time_var(self)

    def set_processor_affinity(self, *args, **kwargs):
        """set_processor_affinity(self, __dummy_5__ mask)"""
        return _foo_swig.periodic_msg_source_sptr_set_processor_affinity(self, *args, **kwargs)

    def unset_processor_affinity(self):
        """unset_processor_affinity(self)"""
        return _foo_swig.periodic_msg_source_sptr_unset_processor_affinity(self)

    def processor_affinity(self):
        """processor_affinity(self) -> __dummy_5__"""
        return _foo_swig.periodic_msg_source_sptr_processor_affinity(self)

    def name(self):
        """name(self) -> string"""
        return _foo_swig.periodic_msg_source_sptr_name(self)

    def symbol_name(self):
        """symbol_name(self) -> string"""
        return _foo_swig.periodic_msg_source_sptr_symbol_name(self)

    def input_signature(self):
        """input_signature(self) -> sptr"""
        return _foo_swig.periodic_msg_source_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(self) -> sptr"""
        return _foo_swig.periodic_msg_source_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(self) -> long"""
        return _foo_swig.periodic_msg_source_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(self) -> basic_block_sptr"""
        return _foo_swig.periodic_msg_source_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(self, int ninputs, int noutputs) -> bool"""
        return _foo_swig.periodic_msg_source_sptr_check_topology(self, *args, **kwargs)

    def alias(self):
        """alias(self) -> string"""
        return _foo_swig.periodic_msg_source_sptr_alias(self)

    def set_block_alias(self, *args, **kwargs):
        """set_block_alias(self, string name)"""
        return _foo_swig.periodic_msg_source_sptr_set_block_alias(self, *args, **kwargs)

    def _post(self, *args, **kwargs):
        """_post(self, pmt_t which_port, pmt_t msg)"""
        return _foo_swig.periodic_msg_source_sptr__post(self, *args, **kwargs)

    def message_ports_in(self):
        """message_ports_in(self) -> pmt_t"""
        return _foo_swig.periodic_msg_source_sptr_message_ports_in(self)

    def message_ports_out(self):
        """message_ports_out(self) -> pmt_t"""
        return _foo_swig.periodic_msg_source_sptr_message_ports_out(self)

periodic_msg_source_sptr_swigregister = _foo_swig.periodic_msg_source_sptr_swigregister
periodic_msg_source_sptr_swigregister(periodic_msg_source_sptr)

periodic_msg_source_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
periodic_msg_source = periodic_msg_source.make;

class wireshark_connector_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::foo::wireshark_connector)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(self) -> wireshark_connector_sptr
        __init__(self, wireshark_connector p) -> wireshark_connector_sptr
        """
        this = _foo_swig.new_wireshark_connector_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(self) -> wireshark_connector"""
        return _foo_swig.wireshark_connector_sptr___deref__(self)

    __swig_destroy__ = _foo_swig.delete_wireshark_connector_sptr
    __del__ = lambda self : None;
    def make(self, *args, **kwargs):
        """
        make(self, LinkType type, bool debug = False) -> sptr

        Params: (type, debug)
        """
        return _foo_swig.wireshark_connector_sptr_make(self, *args, **kwargs)

    def history(self):
        """history(self) -> unsigned int"""
        return _foo_swig.wireshark_connector_sptr_history(self)

    def output_multiple(self):
        """output_multiple(self) -> int"""
        return _foo_swig.wireshark_connector_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(self) -> double"""
        return _foo_swig.wireshark_connector_sptr_relative_rate(self)

    def start(self):
        """start(self) -> bool"""
        return _foo_swig.wireshark_connector_sptr_start(self)

    def stop(self):
        """stop(self) -> bool"""
        return _foo_swig.wireshark_connector_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(self, unsigned int which_input) -> uint64_t"""
        return _foo_swig.wireshark_connector_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(self, unsigned int which_output) -> uint64_t"""
        return _foo_swig.wireshark_connector_sptr_nitems_written(self, *args, **kwargs)

    def max_noutput_items(self):
        """max_noutput_items(self) -> int"""
        return _foo_swig.wireshark_connector_sptr_max_noutput_items(self)

    def set_max_noutput_items(self, *args, **kwargs):
        """set_max_noutput_items(self, int m)"""
        return _foo_swig.wireshark_connector_sptr_set_max_noutput_items(self, *args, **kwargs)

    def unset_max_noutput_items(self):
        """unset_max_noutput_items(self)"""
        return _foo_swig.wireshark_connector_sptr_unset_max_noutput_items(self)

    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(self) -> bool"""
        return _foo_swig.wireshark_connector_sptr_is_set_max_noutput_items(self)

    def max_output_buffer(self, *args, **kwargs):
        """max_output_buffer(self, int i) -> long"""
        return _foo_swig.wireshark_connector_sptr_max_output_buffer(self, *args, **kwargs)

    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(self, long max_output_buffer)
        set_max_output_buffer(self, int port, long max_output_buffer)
        """
        return _foo_swig.wireshark_connector_sptr_set_max_output_buffer(self, *args)

    def min_output_buffer(self, *args, **kwargs):
        """min_output_buffer(self, int i) -> long"""
        return _foo_swig.wireshark_connector_sptr_min_output_buffer(self, *args, **kwargs)

    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(self, long min_output_buffer)
        set_min_output_buffer(self, int port, long min_output_buffer)
        """
        return _foo_swig.wireshark_connector_sptr_set_min_output_buffer(self, *args)

    def pc_noutput_items(self):
        """pc_noutput_items(self) -> float"""
        return _foo_swig.wireshark_connector_sptr_pc_noutput_items(self)

    def pc_noutput_items_var(self):
        """pc_noutput_items_var(self) -> float"""
        return _foo_swig.wireshark_connector_sptr_pc_noutput_items_var(self)

    def pc_nproduced(self):
        """pc_nproduced(self) -> float"""
        return _foo_swig.wireshark_connector_sptr_pc_nproduced(self)

    def pc_nproduced_var(self):
        """pc_nproduced_var(self) -> float"""
        return _foo_swig.wireshark_connector_sptr_pc_nproduced_var(self)

    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(self, int which) -> float
        pc_input_buffers_full(self) -> pmt_vector_float
        """
        return _foo_swig.wireshark_connector_sptr_pc_input_buffers_full(self, *args)

    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(self, int which) -> float
        pc_input_buffers_full_var(self) -> pmt_vector_float
        """
        return _foo_swig.wireshark_connector_sptr_pc_input_buffers_full_var(self, *args)

    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(self, int which) -> float
        pc_output_buffers_full(self) -> pmt_vector_float
        """
        return _foo_swig.wireshark_connector_sptr_pc_output_buffers_full(self, *args)

    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(self, int which) -> float
        pc_output_buffers_full_var(self) -> pmt_vector_float
        """
        return _foo_swig.wireshark_connector_sptr_pc_output_buffers_full_var(self, *args)

    def pc_work_time(self):
        """pc_work_time(self) -> float"""
        return _foo_swig.wireshark_connector_sptr_pc_work_time(self)

    def pc_work_time_var(self):
        """pc_work_time_var(self) -> float"""
        return _foo_swig.wireshark_connector_sptr_pc_work_time_var(self)

    def set_processor_affinity(self, *args, **kwargs):
        """set_processor_affinity(self, __dummy_5__ mask)"""
        return _foo_swig.wireshark_connector_sptr_set_processor_affinity(self, *args, **kwargs)

    def unset_processor_affinity(self):
        """unset_processor_affinity(self)"""
        return _foo_swig.wireshark_connector_sptr_unset_processor_affinity(self)

    def processor_affinity(self):
        """processor_affinity(self) -> __dummy_5__"""
        return _foo_swig.wireshark_connector_sptr_processor_affinity(self)

    def name(self):
        """name(self) -> string"""
        return _foo_swig.wireshark_connector_sptr_name(self)

    def symbol_name(self):
        """symbol_name(self) -> string"""
        return _foo_swig.wireshark_connector_sptr_symbol_name(self)

    def input_signature(self):
        """input_signature(self) -> sptr"""
        return _foo_swig.wireshark_connector_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(self) -> sptr"""
        return _foo_swig.wireshark_connector_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(self) -> long"""
        return _foo_swig.wireshark_connector_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(self) -> basic_block_sptr"""
        return _foo_swig.wireshark_connector_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(self, int ninputs, int noutputs) -> bool"""
        return _foo_swig.wireshark_connector_sptr_check_topology(self, *args, **kwargs)

    def alias(self):
        """alias(self) -> string"""
        return _foo_swig.wireshark_connector_sptr_alias(self)

    def set_block_alias(self, *args, **kwargs):
        """set_block_alias(self, string name)"""
        return _foo_swig.wireshark_connector_sptr_set_block_alias(self, *args, **kwargs)

    def _post(self, *args, **kwargs):
        """_post(self, pmt_t which_port, pmt_t msg)"""
        return _foo_swig.wireshark_connector_sptr__post(self, *args, **kwargs)

    def message_ports_in(self):
        """message_ports_in(self) -> pmt_t"""
        return _foo_swig.wireshark_connector_sptr_message_ports_in(self)

    def message_ports_out(self):
        """message_ports_out(self) -> pmt_t"""
        return _foo_swig.wireshark_connector_sptr_message_ports_out(self)

wireshark_connector_sptr_swigregister = _foo_swig.wireshark_connector_sptr_swigregister
wireshark_connector_sptr_swigregister(wireshark_connector_sptr)

wireshark_connector_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
wireshark_connector = wireshark_connector.make;



